{"ast":null,"code":"var _jsxFileName = \"/home/nexitd/React practice/artco/src/components/Rent/Rent.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport _ from \"lodash\";\nimport s from \"./Rent.module.css\";\nimport Btn from \"../Button/Btn\";\nimport \"./popup.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Rent = props => {\n  _s();\n\n  const [phone, setPhone] = useState(),\n        [name, setName] = useState(),\n        [phoneDirty, setPhoneDirty] = useState(),\n        [nameDirty, setNameDirty] = useState(),\n        [phoneError, setPhoneError] = useState('Поле \"Телефон\" не может быть пустым'),\n        [nameError, setNameError] = useState('Поле \"Имя\" не может быть пустым');\n\n  const blurHandler = e => {\n    switch (e.target.value) {\n      case 'phone':\n        setPhoneDirty(true);\n        break;\n\n      case 'name':\n        setNameDirty(true);\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.cont__rend,\n    id: \"contacts\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: s.title,\n      children: \"\\u0417\\u0430\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u043E\\u0431\\u043E\\u0440\\u0443\\u0434\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: s.form,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.form__input,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"phone\",\n          className: s.name,\n          children: \"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), phoneDirty && phoneError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"status\",\n            children: phoneError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.valid__cont,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            onBlur: e => blurHandler(e),\n            type: \"tel\",\n            name: \"phone\",\n            id: \"phone\",\n            placeholder: \"+ 7 (999)-999-99-99\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.form__input,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          className: s.name,\n          children: \"\\u0418\\u043C\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), nameDirty && nameError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"status\",\n            children: nameError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.valid__cont,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            id: \"name\",\n            onBlur: e => blurHandler(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.rend,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: s.arend,\n          type: \"submit\",\n          children: \"\\u0417\\u0430\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: s.politic,\n          children: [\"\\u041D\\u0430\\u0436\\u0438\\u043C\\u0430\\u044F \\u043D\\u0430 \\u043A\\u043D\\u043E\\u043F\\u043A\\u0443, \\u044F \\u0441\\u043E\\u0433\\u043B\\u0430\\u0448\\u0430\\u044E\\u0441\\u044C c\", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \" \\u041F\\u043E\\u043B\\u0438\\u0442\\u0438\\u043A\\u043E\\u0439 \\u043A\\u043E\\u043D\\u0444\\u0438\\u0434\\u0435\\u043D\\u0446\\u0438\\u0430\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Rent, \"So2xM5MkQhcuHPudMyZV/trVuT4=\");\n\n_c = Rent;\nexport default Rent;\n\nvar _c;\n\n$RefreshReg$(_c, \"Rent\");","map":{"version":3,"sources":["/home/nexitd/React practice/artco/src/components/Rent/Rent.jsx"],"names":["React","useState","useEffect","useForm","_","s","Btn","Rent","props","phone","setPhone","name","setName","phoneDirty","setPhoneDirty","nameDirty","setNameDirty","phoneError","setPhoneError","nameError","setNameError","blurHandler","e","target","value","cont__rend","title","form","form__input","valid__cont","rend","arend","politic"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport _ from \"lodash\";\nimport s from \"./Rent.module.css\";\nimport Btn from \"../Button/Btn\";\nimport \"./popup.css\";\n\nconst Rent = (props) => {\n    const [phone, setPhone] = useState(),\n        [name, setName] = useState(),\n        [phoneDirty, setPhoneDirty] = useState(),\n        [nameDirty, setNameDirty] = useState(),\n        [phoneError, setPhoneError] = useState('Поле \"Телефон\" не может быть пустым'),\n        [nameError, setNameError] = useState('Поле \"Имя\" не может быть пустым'); \n\n    const blurHandler = (e) => {\n        switch (e.target.value) {\n            case 'phone':\n                setPhoneDirty(true)\n                break\n            case 'name':\n                setNameDirty(true)\n                break\n        }\n    }\n\n    return (\n        <div className={s.cont__rend} id=\"contacts\">\n            <h2 className={s.title}>Заказать оборудование</h2>\n            <form className={s.form}>\n                <div className={s.form__input}>\n                    <label htmlFor=\"phone\" className={s.name}>\n                        Телефон\n                    </label>\n                    {(phoneDirty && phoneError) && (\n                        <div className=\"popup\">\n                            <p className=\"status\">{phoneError}</p>\n                        </div>\n                    )}\n                    <div className={s.valid__cont}>\n                        <input\n                            onBlur={e => blurHandler(e)}\n                            type=\"tel\"\n                            name=\"phone\"\n                            id=\"phone\"\n                            placeholder=\"+ 7 (999)-999-99-99\"\n                        />\n                        {/* { && <svg\n                            version=\"1.0\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            width=\"25px\"\n                            height=\"25px\"\n                            viewBox=\"0 0 1280.000000 1034.000000\"\n                            preserveAspectRatio=\"xMidYMid meet\"\n                        >\n                            <g\n                                transform=\"translate(0.000000,1034.000000) scale(0.100000,-0.100000)\"\n                                fill=\"#000000\"\n                                stroke=\"none\"\n                            >\n                                <path\n                                    d=\"M7625 7270 l-3070 -3070 -1232 1232 -1233 1233 -1045 -1045 c-691\n                                    -691 -1045 -1052 -1045 -1065 0 -29 4527 -4555 4557 -4555 15 0 1188 1169\n                                    4130 4115 2259 2263 4110 4122 4112 4131 4 20 -2065 2094 -2089 2094 -8 0\n                                    -1397 -1381 -3085 -3070z\"\n                                />\n                            </g>\n                        </svg>} */}\n                    </div>\n                </div>\n                <div className={s.form__input}>\n                    <label htmlFor=\"name\" className={s.name}>\n                        Имя\n                    </label>\n                    {(nameDirty && nameError) && (\n                        <div className=\"popup\">\n                            <p className=\"status\">{nameError}</p>\n                        </div>\n                    )}\n                    <div className={s.valid__cont}>\n                        <input type=\"text\" name=\"name\" id=\"name\" onBlur={e => blurHandler(e)} />\n                        {/* {!&& <svg\n                            version=\"1.0\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            width=\"25px\"\n                            height=\"25px\"\n                            viewBox=\"0 0 1280.000000 1034.000000\"\n                            preserveAspectRatio=\"xMidYMid meet\"\n                        >\n                            <g\n                                transform=\"translate(0.000000,1034.000000) scale(0.100000,-0.100000)\"\n                                fill=\"#000000\"\n                                stroke=\"none\"\n                            >\n                                <path\n                                    d=\"M7625 7270 l-3070 -3070 -1232 1232 -1233 1233 -1045 -1045 c-691\n                                    -691 -1045 -1052 -1045 -1065 0 -29 4527 -4555 4557 -4555 15 0 1188 1169\n                                    4130 4115 2259 2263 4110 4122 4112 4131 4 20 -2065 2094 -2089 2094 -8 0\n                                    -1397 -1381 -3085 -3070z\"\n                                />\n                            </g>\n                        </svg>} */}\n                    </div>\n                </div>\n                <div className={s.rend}>\n                    <button className={s.arend} type=\"submit\">\n                        Заказать\n                    </button>\n                    <p className={s.politic}>\n                        Нажимая на кнопку, я соглашаюсь c\n                        <span> Политикой конфиденциальности</span>\n                    </p>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default Rent;\n"]},"metadata":{},"sourceType":"module"}